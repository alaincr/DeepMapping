# Calculate KDE on training locations & convert to raster obj
kde=ptDensity(predpts.gt2009,studyarea)
return(kde*tokmsq)
}
set.panel()
par(mfrow=c(3,1),mai=c(0,0,0,0),oma=c(0,0,0,4),bty="n")
# Create class breaks
blist=list()
valvec=vector("numeric")
for(i in c(2009,2012,2016)){
blist[[as.character(i)]]=plot.t(predpts,i)
#blist[[i]]
# tvals=values(blist[[i]])
# valvec=c(valvec,tvals)
}
# Make color palette
my.palette=colorRampPalette(c(rgb(211/255,229/255,232/255,1), rgb(46/255,100/255,140/255,1)), alpha = TRUE)(10)
for(i in c('2009','2012','2016')){
#valvec=valvec[!is.na(valvec)]*tokmsq
#par(oma=c(0,0,0,4))
cintx=densBreaks(blist[[i]],9,'equal')
plot(blist[[i]], breaks=cintx$brks,col = my.palette,axes=FALSE,legend=FALSE)
plot(nbrhoods,add=TRUE,border=rgb(144/255,144/255,144/255,1),lwd=0.5)
if(i==2009) scalebar(d = 5000, xy = c(358258.223,5033798.921), type = 'bar', divs = 2, below = 'm')
par(usr=c(0,1,0,1))
text(0.05,0.9,"A",cex=2)
set.panel(1,1)
#par(oma=c(0,0,0,1))
plot(
blist[[2]],
legend.only = TRUE,
add=TRUE,
breaks = round(cintx$brks,digits=0),
col = my.palette,
axes = FALSE,
legend.width = 1,
legend.shrink = 0.45,
horizontal = FALSE,
axis.args = list(cex.axis = 0.5),
legend.args = list(
text = expression(lambda*phantom(" ")(s[italic('x,y')] %.% km^-2)),
side = 4,
font = 2,
line = 2,
cex = 0.6
)
)
}
# Add legend
}
plot.time()
plot.time=function(){
tokmsq=1000000
plot.t=function(predpts,year){
# Get predictions after 2011
predpts.gt2009=subset(predpts,YEAR2==year)
predpts.gt2009@bbox=studyarea@bbox
# Calculate KDE on training locations & convert to raster obj
kde=ptDensity(predpts.gt2009,studyarea)
return(kde*tokmsq)
}
set.panel()
par(mfrow=c(3,1),mai=c(0,0,0,0),oma=c(0,0,0,4),bty="n")
# Create class breaks
blist=list()
valvec=vector("numeric")
for(i in c(2009,2012,2016)){
blist[[as.character(i)]]=plot.t(predpts,i)
#blist[[i]]
# tvals=values(blist[[i]])
# valvec=c(valvec,tvals)
}
# Make color palette
my.palette=colorRampPalette(c(rgb(211/255,229/255,232/255,1), rgb(46/255,100/255,140/255,1)), alpha = TRUE)(10)
for(i in c('2009','2012','2016')){
#valvec=valvec[!is.na(valvec)]*tokmsq
#par(oma=c(0,0,0,4))
cintx=densBreaks(blist[[i]],9,'equal')
plot(blist[[i]], breaks=cintx$brks,col = my.palette,axes=FALSE,legend=FALSE)
plot(nbrhoods,add=TRUE,border=rgb(144/255,144/255,144/255,1),lwd=0.5)
if(i==2009) scalebar(d = 5000, xy = c(358258.223,5033798.921), type = 'bar', divs = 2, below = 'm')
par(usr=c(0,1,0,1))
text(0.05,0.9,"A",cex=2)
#set.panel(1,1)
#par(oma=c(0,0,0,1))
plot(
blist[[2]],
legend.only = TRUE,
add=TRUE,
breaks = round(cintx$brks,digits=0),
col = my.palette,
axes = FALSE,
legend.width = 1,
legend.shrink = 0.45,
horizontal = FALSE,
axis.args = list(cex.axis = 0.5),
legend.args = list(
text = expression(lambda*phantom(" ")(s[italic('x,y')] %.% km^-2)),
side = 4,
font = 2,
line = 2,
cex = 0.6
)
)
}
# Add legend
}
plot.time()
plot.time=function(){
tokmsq=1000000
plot.t=function(predpts,year){
# Get predictions after 2011
predpts.gt2009=subset(predpts,YEAR2==year)
predpts.gt2009@bbox=studyarea@bbox
# Calculate KDE on training locations & convert to raster obj
kde=ptDensity(predpts.gt2009,studyarea)
return(kde*tokmsq)
}
set.panel()
par(mfrow=c(3,1),mai=c(0,0,0,0),oma=c(0,0,0,4),bty="n")
# Create class breaks
blist=list()
valvec=vector("numeric")
for(i in c(2009,2012,2016)){
blist[[as.character(i)]]=plot.t(predpts,i)
#blist[[i]]
# tvals=values(blist[[i]])
# valvec=c(valvec,tvals)
}
# Make color palette
my.palette=colorRampPalette(c(rgb(211/255,229/255,232/255,1), rgb(46/255,100/255,140/255,1)), alpha = TRUE)(10)
for(i in c('2009','2012','2016')){
#valvec=valvec[!is.na(valvec)]*tokmsq
#par(oma=c(0,0,0,4))
cintx=densBreaks(blist[[i]],9,'equal')
plot(blist[[i]], breaks=cintx$brks,col = my.palette,axes=FALSE,legend=FALSE)
plot(nbrhoods,add=TRUE,border=rgb(144/255,144/255,144/255,1),lwd=0.5)
if(i==2009) scalebar(d = 5000, xy = c(358258.223,5033798.921), type = 'bar', divs = 2, below = 'm')
par(usr=c(0,1,0,1))
text(0.05,0.9,"A",cex=2)
#set.panel(1,1)
par(oma=c(0,0,0,1))
plot(
blist[[2]],
legend.only = TRUE,
add=TRUE,
breaks = round(cintx$brks,digits=0),
col = my.palette,
axes = FALSE,
legend.width = 1,
legend.shrink = 0.45,
horizontal = FALSE,
axis.args = list(cex.axis = 0.5),
legend.args = list(
text = expression(lambda*phantom(" ")(s[italic('x,y')] %.% km^-2)),
side = 4,
font = 2,
line = 2,
cex = 0.6
)
)
}
# Add legend
}
plot.time()
plot.time=function(){
tokmsq=1000000
plot.t=function(predpts,year){
# Get predictions after 2011
predpts.gt2009=subset(predpts,YEAR2==year)
predpts.gt2009@bbox=studyarea@bbox
# Calculate KDE on training locations & convert to raster obj
kde=ptDensity(predpts.gt2009,studyarea)
return(kde*tokmsq)
}
set.panel()
par(mfrow=c(3,1),mai=c(0,0,0,0),oma=c(0,0,0,4),bty="n")
# Create class breaks
blist=list()
valvec=vector("numeric")
for(i in c(2009,2012,2016)){
blist[[as.character(i)]]=plot.t(predpts,i)
#blist[[i]]
# tvals=values(blist[[i]])
# valvec=c(valvec,tvals)
}
# Make color palette
my.palette=colorRampPalette(c(rgb(211/255,229/255,232/255,1), rgb(46/255,100/255,140/255,1)), alpha = TRUE)(10)
for(i in c('2009','2012','2016')){
#valvec=valvec[!is.na(valvec)]*tokmsq
#par(oma=c(0,0,0,4))
cintx=densBreaks(blist[[i]],9,'equal')
plot(blist[[i]], breaks=cintx$brks,col = my.palette,axes=FALSE,legend=FALSE)
plot(nbrhoods,add=TRUE,border=rgb(144/255,144/255,144/255,1),lwd=0.5)
if(i==2009) scalebar(d = 5000, xy = c(358258.223,5033798.921), type = 'bar', divs = 2, below = 'm')
par(usr=c(0,1,0,1))
text(0.05,0.9,"A",cex=2)
#set.panel(1,1)
#par(oma=c(0,0,0,1))
plot(
blist[[i]],
legend.only = TRUE,
add=TRUE,
breaks = round(cintx$brks,digits=0),
col = my.palette,
axes = FALSE,
legend.width = 1,
legend.shrink = 0.45,
horizontal = FALSE,
axis.args = list(cex.axis = 0.5),
legend.args = list(
text = expression(lambda*phantom(" ")(s[italic('x,y')] %.% km^-2)),
side = 4,
font = 2,
line = 2,
cex = 0.6
)
)
}
# Add legend
}
plot.time()
?par
plot.time=function(){
tokmsq=1000000
plot.t=function(predpts,year){
# Get predictions after 2011
predpts.gt2009=subset(predpts,YEAR2==year)
predpts.gt2009@bbox=studyarea@bbox
# Calculate KDE on training locations & convert to raster obj
kde=ptDensity(predpts.gt2009,studyarea)
return(kde*tokmsq)
}
set.panel()
par(mfrow=c(3,1),mai=c(0,0,0,1),oma=c(0,0,0,4),bty="n")
# Create class breaks
blist=list()
valvec=vector("numeric")
for(i in c(2009,2012,2016)){
blist[[as.character(i)]]=plot.t(predpts,i)
#blist[[i]]
# tvals=values(blist[[i]])
# valvec=c(valvec,tvals)
}
# Make color palette
my.palette=colorRampPalette(c(rgb(211/255,229/255,232/255,1), rgb(46/255,100/255,140/255,1)), alpha = TRUE)(10)
for(i in c('2009','2012','2016')){
#valvec=valvec[!is.na(valvec)]*tokmsq
#par(oma=c(0,0,0,4))
cintx=densBreaks(blist[[i]],9,'equal')
plot(blist[[i]], breaks=cintx$brks,col = my.palette,axes=FALSE,legend=FALSE)
plot(nbrhoods,add=TRUE,border=rgb(144/255,144/255,144/255,1),lwd=0.5)
if(i==2009) scalebar(d = 5000, xy = c(358258.223,5033798.921), type = 'bar', divs = 2, below = 'm')
par(usr=c(0,1,0,1))
text(0.05,0.9,"A",cex=2)
#set.panel(1,1)
#par(oma=c(0,0,0,1))
plot(
blist[[i]],
legend.only = TRUE,
add=TRUE,
breaks = round(cintx$brks,digits=0),
col = my.palette,
axes = FALSE,
legend.width = 1,
legend.shrink = 0.45,
horizontal = FALSE,
axis.args = list(cex.axis = 0.5),
legend.args = list(
text = expression(lambda*phantom(" ")(s[italic('x,y')] %.% km^-2)),
side = 4,
font = 2,
line = 2,
cex = 0.6
)
)
}
# Add legend
}
plot.time()
plot.time=function(){
tokmsq=1000000
plot.t=function(predpts,year){
# Get predictions after 2011
predpts.gt2009=subset(predpts,YEAR2==year)
predpts.gt2009@bbox=studyarea@bbox
# Calculate KDE on training locations & convert to raster obj
kde=ptDensity(predpts.gt2009,studyarea)
return(kde*tokmsq)
}
set.panel()
par(mfrow=c(3,1),mai=c(0,0,0,.2),oma=c(0,0,0,4),bty="n")
# Create class breaks
blist=list()
valvec=vector("numeric")
for(i in c(2009,2012,2016)){
blist[[as.character(i)]]=plot.t(predpts,i)
#blist[[i]]
# tvals=values(blist[[i]])
# valvec=c(valvec,tvals)
}
# Make color palette
my.palette=colorRampPalette(c(rgb(211/255,229/255,232/255,1), rgb(46/255,100/255,140/255,1)), alpha = TRUE)(10)
for(i in c('2009','2012','2016')){
#valvec=valvec[!is.na(valvec)]*tokmsq
#par(oma=c(0,0,0,4))
cintx=densBreaks(blist[[i]],9,'equal')
plot(blist[[i]], breaks=cintx$brks,col = my.palette,axes=FALSE,legend=FALSE)
plot(nbrhoods,add=TRUE,border=rgb(144/255,144/255,144/255,1),lwd=0.5)
if(i==2009) scalebar(d = 5000, xy = c(358258.223,5033798.921), type = 'bar', divs = 2, below = 'm')
par(usr=c(0,1,0,1))
text(0.05,0.9,"A",cex=2)
#set.panel(1,1)
#par(oma=c(0,0,0,1))
plot(
blist[[i]],
legend.only = TRUE,
add=TRUE,
breaks = round(cintx$brks,digits=0),
col = my.palette,
axes = FALSE,
legend.width = 1,
legend.shrink = 0.45,
horizontal = FALSE,
axis.args = list(cex.axis = 0.5),
legend.args = list(
text = expression(lambda*phantom(" ")(s[italic('x,y')] %.% km^-2)),
side = 4,
font = 2,
line = 2,
cex = 0.6
)
)
}
# Add legend
}
plot.time()
round(cintx$brks,digits=0)
plot.time=function(){
tokmsq=1000000
plot.t=function(predpts,year){
# Get predictions after 2011
predpts.gt2009=subset(predpts,YEAR2==year)
predpts.gt2009@bbox=studyarea@bbox
# Calculate KDE on training locations & convert to raster obj
kde=ptDensity(predpts.gt2009,studyarea)
return(kde*tokmsq)
}
set.panel()
par(mfrow=c(3,1),mai=c(0,0,0,.2),oma=c(0,0,0,4),bty="n")
# Create class breaks
blist=list()
valvec=vector("numeric")
for(i in c(2009,2012,2016)){
blist[[as.character(i)]]=plot.t(predpts,i)
#blist[[i]]
# tvals=values(blist[[i]])
# valvec=c(valvec,tvals)
}
# Make color palette
my.palette=colorRampPalette(c(rgb(211/255,229/255,232/255,1), rgb(46/255,100/255,140/255,1)), alpha = TRUE)(10)
lablist=list()
lablist[['2009']]="A"
lablist[['2012']]="B"
lablist[['2016']]="C"
for(i in c('2009','2012','2016')){
#valvec=valvec[!is.na(valvec)]*tokmsq
#par(oma=c(0,0,0,4))
cintx=densBreaks(blist[[i]],9,'equal')
plot(blist[[i]], breaks=cintx$brks,col = my.palette,axes=FALSE,legend=FALSE)
plot(nbrhoods,add=TRUE,border=rgb(144/255,144/255,144/255,1),lwd=0.5)
if(i==2009) scalebar(d = 5000, xy = c(358258.223,5033798.921), type = 'bar', divs = 2, below = 'm')
par(usr=c(0,1,0,1))
text(0.05,0.9,lablist[[i]],cex=2)
#set.panel(1,1)
#par(oma=c(0,0,0,1))
plot(
blist[[i]],
legend.only = TRUE,
add=TRUE,
breaks = round(cintx$brks,digits=0),
col = my.palette,
axes = FALSE,
legend.width = 1,
legend.shrink = 0.45,
horizontal = FALSE,
axis.args = list(cex.axis = 0.5),
legend.args = list(
text = expression(lambda*phantom(" ")(s[italic('x,y')] %.% km^-2)),
side = 4,
font = 2,
line = 2,
cex = 0.6
)
)
}
# Add legend
}
plot.time()
ptDensity = function(a, sarea) {
# Calculate KDE
kdepredict = density.ppp(as.ppp(a),
eps = 20,
kernel = 'gaussian',
sigma = 200)
kdepredict = raster(kdepredict)
kdepredict <- crop(kdepredict, extent(sarea))
kdepredict <- mask(kdepredict, sarea)
return(kdepredict)
}
densBreaks = function(kdepredict,n,style) {
if(!(is.numeric(kdepredict)=="numeric")) {
vals = values(kdepredict)
vals = vals[!is.na(vals)]
}
else{vals=kdepredict}
cint = classIntervals(vals, n = n, style = style)
return(cint)
}
openSPDF = function(shapefilepath,outCS=CRS("+init=epsg:32189")) {
permitpts.b=readOGR(shapefilepath)#,stringsAsFactors = FALSE)
# arc.check_product()
# permitpts = arc.open(shapefilepath)
# permitpts.a = arc.select(permitpts)
# permitpts.b = arc.data2sp(permitpts.a)
permits = spTransform(permitpts.b, outCS)
return(permits)
}
plot.time=function(){
tokmsq=1000000
plot.t=function(predpts,year){
# Get predictions after 2011
predpts.gt2009=subset(predpts,YEAR2==year)
predpts.gt2009@bbox=studyarea@bbox
# Calculate KDE on training locations & convert to raster obj
kde=ptDensity(predpts.gt2009,studyarea)
return(kde*tokmsq)
}
set.panel()
par(mfrow=c(3,1),mai=c(0,0,0,.2),oma=c(0,0,0,4),bty="n")
# Create class breaks
blist=list()
valvec=vector("numeric")
for(i in c(2009,2012,2016)){
blist[[as.character(i)]]=plot.t(predpts,i)
#blist[[i]]
# tvals=values(blist[[i]])
# valvec=c(valvec,tvals)
}
# Make color palette
my.palette=colorRampPalette(c(rgb(211/255,229/255,232/255,1), rgb(46/255,100/255,140/255,1)), alpha = TRUE)(10)
lablist=list()
lablist[['2009']]="A"
lablist[['2012']]="B"
lablist[['2016']]="C"
for(i in c('2009','2012','2016')){
#valvec=valvec[!is.na(valvec)]*tokmsq
#par(oma=c(0,0,0,4))
cintx=densBreaks(blist[[i]],9,'equal')
plot(blist[[i]], breaks=cintx$brks,col = my.palette,axes=FALSE,legend=FALSE)
plot(nbrhoods,add=TRUE,border=rgb(144/255,144/255,144/255,1),lwd=0.5)
if(i==2009) scalebar(d = 5000, xy = c(358258.223,5033798.921), type = 'bar', divs = 2, below = 'm')
par(usr=c(0,1,0,1))
text(0.05,0.9,lablist[[i]],cex=2)
#set.panel(1,1)
#par(oma=c(0,0,0,1))
plot(
blist[[i]],
legend.only = TRUE,
add=TRUE,
breaks = round(cintx$brks,digits=0),
col = my.palette,
axes = FALSE,
legend.width = 1,
legend.shrink = 0.45,
horizontal = FALSE,
axis.args = list(cex.axis = 0.5),
legend.args = list(
text = expression(lambda*phantom(" ")(s[italic('x,y')] %.% km^-2)),
side = 4,
font = 2,
line = 2,
cex = 0.6
)
)
}
# Add legend
}
plot.time()
6/3.5
11/8.5
3.5*1.29
7/4
7/3
7/4.5
7/5
11/8.5
4*11/8.5
5.17/4
3/7
7/3
8.5*11
8.5/11
9*.7727
# makeplot
png("./figures/predovertime.png",units="in",width=7,height=9,res=300)
plot.time()
dev.off()
# makeplot
png("./figures/predovertime.png",units="in",width=6,height=9,res=300)
plot.time()
dev.off()
